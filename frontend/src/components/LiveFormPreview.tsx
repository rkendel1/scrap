import React from 'react';
import { EmbeddableForm } from './EmbeddableForm';
import { FormData, GeneratedForm, SaaSForm, FormField } from '../types/api';

interface LiveFormPreviewProps {
  formData: Partial<FormData>;
  generatedForm: GeneratedForm | null;
  createdForm: SaaSForm | null;
  user?: any;
}

export const LiveFormPreview: React.FC<LiveFormPreviewProps> = ({
  formData,
  generatedForm,
  createdForm,
  user,
}) => {
  const { url, purpose } = formData;

  // Construct a mock GeneratedForm for preview if not yet generated by AI
  const getPreviewForm = (): GeneratedForm => {
    if (generatedForm) {
      return generatedForm;
    }

    // Default styling
    const defaultStyling = {
      primaryColor: '#007bff',
      backgroundColor: '#ffffff',
      fontFamily: 'system-ui, -apple-system, sans-serif',
      borderRadius: '8px',
      buttonStyle: 'solid',
    };

    // Mock fields based on purpose
    let mockFields: FormField[] = [
      { type: 'text', name: 'name', label: 'Your Name', placeholder: 'Enter your name', required: true },
      { type: 'email', name: 'email', label: 'Email', placeholder: 'your@email.com', required: true },
    ];

    if (purpose?.toLowerCase().includes('feedback') || purpose?.toLowerCase().includes('message')) {
      mockFields.push({ type: 'textarea', name: 'message', label: 'Message', placeholder: 'Your message', required: true });
    } else if (purpose?.toLowerCase().includes('lead')) {
      mockFields.push({ type: 'text', name: 'company', label: 'Company', placeholder: 'Your company', required: false });
    }

    return {
      title: purpose ? `AI Form: ${purpose}` : 'Your AI-Powered Form',
      description: url ? `This form will adapt to the style of ${url}` : 'Start by entering a website URL.',
      fields: mockFields,
      ctaText: purpose?.toLowerCase().includes('subscribe') ? 'Subscribe' : 'Submit',
      thankYouMessage: 'Thank you for your submission!',
      styling: defaultStyling,
    };
  };

  const previewForm = getPreviewForm();
  const showBranding = user?.subscription_tier !== 'paid';

  return (
    <div className="card" style={{ position: 'sticky', top: '20px' }}> {/* Sticky for better UX */}
      <h3 style={{ marginBottom: '16px', textAlign: 'center' }}>Live Preview</h3>
      <div style={{
        border: '1px solid #e1e5e9',
        borderRadius: '8px',
        padding: '16px',
        backgroundColor: '#f8f9fa',
        minHeight: '300px',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
      }}>
        {url || purpose || generatedForm ? (
          <EmbeddableForm
            form={previewForm}
            embedCode={createdForm?.embed_code || "preview-mode"} // Use actual embed code if available
            showBranding={showBranding}
            onSubmit={(data) => console.log('Preview submission:', data)} // Mock submission
          />
        ) : (
          <p style={{ color: '#666', textAlign: 'center' }}>
            Enter a URL and purpose to see your form preview here.
          </p>
        )}
      </div>
      {generatedForm && (
        <div style={{
          marginTop: '16px',
          padding: '12px',
          backgroundColor: '#e8f5e8',
          borderRadius: '6px',
          border: '1px solid #c3e6cb',
          textAlign: 'center',
          fontSize: '14px',
          color: '#155724'
        }}>
          âœ… AI-generated form preview.
        </div>
      )}
    </div>
  );
};