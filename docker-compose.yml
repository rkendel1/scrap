version: "3.9"

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME:-scrap_db}
      POSTGRES_USER: ${DB_USER:-scrap_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-scrap_password}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-scrap_user} -d ${DB_NAME:-scrap_db}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./.env         # shared root env
      - ./backend/.env # optional backend-specific overrides
    environment:
      DATABASE_URL: postgresql://${DB_USER:-scrap_user}:${DB_PASSWORD:-scrap_password}@db:${DB_PORT:-5432}/${DB_NAME:-scrap_db}
      # Removed redundant DB_HOST, DB_PORT, DB_NAME, DB_USER, DB_PASSWORD, PORT, NODE_ENV, FRONTEND_URL
      # These are now sourced from ./.env or backend/.env via env_file
    ports:
      - "${PORT:-3001}:${PORT:-3001}" # Use PORT from .env
    volumes:
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/tsconfig.json:/app/tsconfig.json
      - ./frontend/public:/app/frontend/public
      - backend_node_modules:/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "npm install && npm run dev"

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./.env          # shared root env
      - ./frontend/.env # optional frontend-specific overrides
    # Removed the empty 'environment:' block as it's not needed and causes a YAML error.
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/index.html:/app/index.html
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0

  # n8n Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    env_file:
      - ./.env # shared root env
    environment:
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=${NODE_ENV:-development} # Use NODE_ENV from .env
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=UTC
      - N8N_LOG_LEVEL=info
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - N8N_DISABLE_PRODUCTION_MAIN_PROCESS=true
      - DATABASE_TYPE=postgresdb
      - DATABASE_HOST=db
      - DATABASE_PORT=${DB_PORT:-5432} # Use DB_PORT from .env
      - DATABASE_NAME=${DB_NAME:-scrap_db} # Use DB_NAME from .env
      - DATABASE_USER=${DB_USER:-scrap_user} # Use DB_USER from .env
      - DATABASE_PASSWORD=${DB_PASSWORD:-scrap_password} # Use DB_PASSWORD from .env
      - DATABASE_SCHEMA=n8n
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
      - ./n8n/customer-configs:/home/node/.n8n/customer-configs
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  n8n_data:
  backend_node_modules: